<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CompatUtils</name>
    </assembly>
    <members>
        <member name="T:CompatUtils.Compatibility">
            <summary>RimWorld.<see cref="N:CompatUtils" /> main class</summary>
        </member>
        <member name="M:CompatUtils.Compatibility.IsModActive(System.String)">
            <summary>
                Goes through all installed mods checking for a mod with the specified PackageID and returns whether the mod is
                active.
            </summary>
            <returns>A <see cref="T:System.Boolean" /> representing whether or not a mod with the specified PackageID is active.</returns>
        </member>
        <member name="M:CompatUtils.Compatibility.GetModName(System.String)">
            <summary>
                Goes through all installed mods checking for a mod with the specified PackageID and returns that mod's name if
                found.
            </summary>
            <returns>
                A <see cref="T:System.String" /> representing the name of the mod with the specified PackageID, or <see langword="null" />
                if no mod with the specified PackageID is active.
            </returns>
        </member>
        <member name="M:CompatUtils.Compatibility.GetMethod(System.String,System.String,System.Type[],System.Type[])">
            <summary>
                Uses <see cref="T:HarmonyLib.Harmony" />'s <seealso cref="M:HarmonyLib.AccessTools.Method(System.Type,System.String,System.Type[],System.Type[])" /> to get the
                reflection information for the specified method.
            </summary>
            <returns>
                The <see cref="T:System.Reflection.MethodInfo" /> of the specified method if found, otherwise <see langword="null" />.
            </returns>
        </member>
        <member name="M:CompatUtils.Compatibility.GetMethod(System.String,System.Type[],System.Type[])">
            <summary>
                Uses <see cref="T:HarmonyLib.Harmony" />'s <seealso cref="M:HarmonyLib.AccessTools.Method(System.String,System.Type[],System.Type[])" /> to get the reflection
                information for the specified method.
            </summary>
            <returns>
                The <see cref="T:System.Reflection.MethodInfo" /> of the specified method if found, otherwise <see langword="null" />.
            </returns>
        </member>
        <member name="M:CompatUtils.Compatibility.IsMethodConsistent(System.Reflection.MethodInfo,System.Type[],System.Boolean,System.String)">
            <summary>
                Checks all of the specified method's types in order to make sure the method hasn't been changed from your current
                implementation of it.
                <para>
                    May print a detailed error message to RimWorld's console if <paramref name="logError" /> is set to
                    <see langword="true" />.
                </para>
                <para>
                    The detailed error message will also give the name of the mod at fault if
                    <paramref name="modPackageIdForLog" /> is specified.
                </para>
            </summary>
            <returns>
                A <see cref="T:System.Boolean" /> representing whether or not the specified method's types are all the same.
            </returns>
        </member>
        <member name="M:CompatUtils.Compatibility.GetConsistentMethod(System.String,System.Reflection.MethodInfo,System.Type[],System.Boolean,System.String)">
            <summary>
                Checks whether a mod is active, and if so runs
                <seealso cref="M:CompatUtils.Compatibility.IsMethodConsistent(System.Reflection.MethodInfo,System.Type[],System.Boolean,System.String)" /> on the specified method.
                <para>
                    May print a detailed error message to RimWorld's console if <paramref name="logError" /> is set to
                    <see langword="true" />.
                </para>
            </summary>
            <returns>
                If the specified mod and method both exist and the specified method is consistent, returns the
                <see cref="T:System.Reflection.MethodInfo" /> of the specified method; otherwise returns <see langword="null" />.
            </returns>
        </member>
        <member name="M:CompatUtils.Compatibility.GetConsistentMethod(System.String,System.String,System.String,System.Type[],System.Boolean)">
            <summary>
                Checks whether a mod is active, and if so gets the specified method via
                <seealso cref="M:CompatUtils.Compatibility.GetMethod(System.String,System.String,System.Type[],System.Type[])" /> and runs
                <seealso cref="M:CompatUtils.Compatibility.IsMethodConsistent(System.Reflection.MethodInfo,System.Type[],System.Boolean,System.String)" /> on it.
                <para>May print a detailed error message to RimWorld's console if <paramref name="logError" /> is set to true.</para>
            </summary>
            <returns>
                If the specified mod and method both exist and the specified method is consistent, returns the
                <see cref="T:System.Reflection.MethodInfo" /> of the specified method; otherwise returns <see langword="null" />.
            </returns>
        </member>
        <member name="M:CompatUtils.Compatibility.GetConsistentMethod(System.String,System.String,System.Type[],System.Boolean)">
            <summary>
                Checks whether a mod is active, and if so gets the specified method via
                <seealso cref="M:CompatUtils.Compatibility.GetMethod(System.String,System.Type[],System.Type[])" /> and runs
                <seealso cref="M:CompatUtils.Compatibility.IsMethodConsistent(System.Reflection.MethodInfo,System.Type[],System.Boolean,System.String)" /> on it.
                <para>
                    May print a detailed error message to RimWorld's console if <paramref name="logError" /> is set to
                    <see langword="true" />.
                </para>
            </summary>
            <returns>
                If the specified mod and method both exist and the specified method is consistent, returns the
                <see cref="T:System.Reflection.MethodInfo" /> of the specified method; otherwise returns <see langword="null" />.
            </returns>
        </member>
    </members>
</doc>
